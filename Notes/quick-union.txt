// quick-union approach (lazy approach) for union-find
// p's root is a child of q's root
public class QuickUnionUF {
	private int[] id;
	public QuickUnionUF(int N) {
		id = new int[N];
		for(int i = 0; i < N; i++)	// N array accesses
			id[i] = i;
	}
	private int root(int i) {
		while(i != id[i]) i = id[i];	// depth of i array accesses
		return i;
	}
	public boolean isConnected(int p, int q) {
		return root(p) == root(q);
	}
	public void union(int p, int q) {
		int i = root(p);
		int j = root(q);
		id[i] = j;
	}
}
// Trees can get tall. Find operation is expensive.